@model DotNetReader.Models.UserProfile

@{
    ViewBag.Title = "Home Page";
}

 <div class="hero-unit">
        <h1>Dashboard</h1>
        <p>Welcome back @ViewBag.Name!</p>
      </div>

<div class="row-fluid">
 <div class="span4">
     <h3>Profil</h3>
<dl class="dl-horizontal">
    <dt>@Html.DisplayNameFor(p => p.UserName)</dt>
    <dd>@Html.DisplayTextFor(p => p.UserName)</dd>

    <dt>@Html.DisplayNameFor(p => p.Email)</dt>
    <dd>@Html.DisplayTextFor(p => p.Email)</dd>

    <dt>@Html.DisplayNameFor(p => p.feedMaxEvent)</dt>
    <dd>@Html.DisplayTextFor(p => p.feedMaxEvent)</dd>

    <dt>@Html.DisplayNameFor(p => p.EventPerPage)</dt>
    <dd>@Html.DisplayTextFor(p => p.EventPerPage)</dd>


    <dt>@Html.DisplayNameFor(p => p.SynchroCode)</dt>
    <dd>@Html.DisplayTextFor(p => p.SynchroCode)</dd>

   
    <dt>@Html.DisplayNameFor(p => p.SynchronisationType)</dt>
    <dd>@ViewBag.SyncType</dd>

    <dt>@Html.DisplayNameFor(p => p.articleDisplayType)</dt>
    <dd>@ViewBag.DisplayType</dd>


</dl>

   <p>
            @Html.ActionLink("Change settings", "Edit", "Profile",null, new { @class = "btn" })
        </p>
</div>
        <div class="span4">
<h3>Opml</h3>
@Html.ActionLink("Export", "ExportFeed", "Feed", null, new { @class = "btn" })


        <form action="Feed/ImportFeed" method="post" enctype="multipart/form-data">
          <fieldset>
     
          <input type="file" name="file" id="file" />
              </fieldset>

          <input type="submit" class="btn"value="Import" />
        </form>
            <p>L'import de flux rss peut prendre quelques minutes à se réaliser.</p>
        </div>
        
</div>
    <div class="row-fluid">
    <div class="span4">
<h3>Statistique</h3>

<dl class="dl-horizontal">
    
        <dt>@Html.DisplayNameFor(p => p.eventClicked)</dt>
    <dd>@Html.DisplayTextFor(p => p.eventClicked)</dd>

        <dt>@Html.DisplayNameFor(p => p.eventDownloaded)</dt>
    <dd>@Html.DisplayTextFor(p => p.eventDownloaded)</dd>

        <dt>@Html.DisplayNameFor(p => p.eventRead)</dt>
    <dd>@Html.DisplayTextFor(p => p.eventRead)</dd>

    <dt>Read download ratio</dt>
    @if (Model.eventDownloaded > 0)
    {
    <dd>@((float)Model.eventRead/Model.eventDownloaded*100) %</dd>
        
    }
 

    

</dl>
</div>


    </div>







